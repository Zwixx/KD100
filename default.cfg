// KD100 config file
// 
//	Assumptions:
//		- (B)utton defines a new button and the following number specifies which button it is. Without the paranthesis, the previous sentence would define a new button
//		- (B)uttons do not need to be listed in order but their type and function must be listed on separate lines afterwards
//		- (B)utton definitions can be skipped if you don't want all the buttons to work on the keydial
//		- (B)utton, type, and function definitions can contain numbers, symbols, or letters before hand but must have a number or function after the ':'
//		- Ex) @#$!123ttype: 1 - is valid
//		- type: f02r - will default to type 0
//		- type and function definitions must be lower case but can be in any order
//		- The program defaults the type to 0 and the function to null
//		- The (W)heel works in two parts. The first definition assigns all functions for turning it clockwise while the second definition assigns counter clockwise functions
//		- The wheel functions must be defined at the end of the config file
//		- If one wheel side has more functions than the other, it will set the function of the other wheel to NULL and do nothing when turning the wheel that way
//		- Three wheel functions are provided but there is no limit to the amount you can add
//		- Both button and wheel definitions do not need '//' before them and the wheel definition doesn't need the text after it to work
//		- '//' is not required to add comments to the file but anything after a function, type, or button will be included in the program
//		- All other text is skipped by the program
//		- (W)heel functions cannot run programs or act as mouse input
// 		
//	(B)utton Types:
//	0: Key - The pressed button acts as a key or a combination of keys
//		ex) a = key 'A' | ctrl+a = control and 'A' at the same time
//	1: function - The pressed button runs a bash command/script
//		ex) krita | echo Hello world | gpio www.example.com
//		NOTE: "swap" changes the wheel buttons function 
//	2:	Mouse buttons - Specify mouse1, 2, 3, 4, or 5 activates mouse buttons (left/middle/right/scroll up/ scroll down)
//		ex) type: 2 function: mouse1
//
//	Each key is numbered from the top left to the bottom right and keeps the wheel and button separate. The wheel button is button 18
//	|---------------|
//	| 0 | 1 | 2 | 3 |
//	|---|---|---|---|
//	| 4 | 5 | 6 | 7 |
//	|---|---|---|---|
//	| 8 | 9 | 10| 11|
//	|---|---|---|---|
//	| 12| 13| 14|   |
//	|-------|---| 15|
//	|   16  | 17|   |
//	|---------------|

// Button 0
type: 0
function: b
// Button 1
type: 0
function: f
// Button 2
type: 0
function: e
// Button 3
type: 0
function: x
// Button 4
type: 0
function: m
// Button 5
type: 0
function: ctrl+c
// Button 6
type: 0
function: ctrl+v
// Button 7
type: 0
function: ctrl+shift+a
// Button 8
type: 0
function: ctrl+z
// Button 9
type: 0
function: ctrl+shift+z
// Button 10
type: 0
function: shift
// Button 11
type: 0
function: ctrl
// Button 12
type: 0
function: ctrl+g
// Button 13
type: 0
function: ctrl+e
// Button 14
type: 0
function: Delete
// Button 15
type: 0
function: space
// Button 16
type: 0
function: ctrl+s
// Button 17
type: 0
function: Insert
// Dial Button 18
type: 1
function: swap
// Wheel Clockwise
function: ctrl+KP_Add
function: bracketright
function: NULL
// Wheel Counter-Clockwise
function: ctrl+minus
function: bracketleft
function: NULL
